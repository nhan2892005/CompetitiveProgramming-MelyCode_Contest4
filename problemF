#include<bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;
const int MAXN = 1e5 + 5;
const int MAXM = 105;
int dp[MAXN][MAXM];
int a[MAXN];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int N, M;
    cin >> N >> M;
    for(int i = 1; i <= N; i++)
        cin >> a[i];

    if(a[1] == 0) {
        for(int i = 1; i <= M; i++)
            dp[1][i] = 1;
    } else {
        dp[1][a[1]] = 1;
    }

    for(int i = 2; i <= N; i++) {
        if(a[i] == 0) {
            for(int j = 1; j <= M; j++)
                for(int k = j - 1; k <= j + 1; k++)
                    if(k >= 1 && k <= M)
                        dp[i][j] = (dp[i][j] + dp[i-1][k]) % MOD;
        } else {
            for(int k = a[i] - 1; k <= a[i] + 1; k++)
                if(k >= 1 && k <= M)
                    dp[i][a[i]] = (dp[i][a[i]] + dp[i-1][k]) % MOD;
        }
    }

    int ans = 0;
    for(int i = 1; i <= M; i++)
        ans = (ans + dp[N][i]) % MOD;

    cout << ans;

    return 0;
}
